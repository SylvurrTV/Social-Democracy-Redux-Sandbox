title: SPD Party Congress
new-page: true
tags: event
priority: -1
view-if: never
on-departure: never = 0;
set-jump: post_congress

# the low priority means that this event is only seen after all other events are resolved for the month.
# note: z_coalition = z_celation + (pro_cepublic/2); z_coalition *= 1.25 if z_faction_leader == "Joos";

= SPD Party Congress, [+ month : month +] [+ year +]

The Party congress is to be held now.

- @faction_algorithm: May we do our best...

@faction_algorithm
on-arrival: {!

Q.left_votes = 0;
Q.center_votes = 0;
Q.reformist_votes = 0;
Q.labor_votes = 0;
Q.neorevisionist_votes = 0;

Q.left_workers = 1;
Q.left_new_middle = 0.7;
if (Q.new_middle_conscious) {
    Q.left_new_middle += 0.3;
}
Q.left_old_middle = 0;
Q.left_rural = 0.4;
Q.left_unemployed = 1.25;
Q.left_catholics = 0.75;

Q.center_workers = 1;
Q.center_new_middle = 1;
if (Q.new_middle_conscious) {
    Q.center_new_middle += 0.25;
}
Q.center_old_middle = 0.5;
Q.center_rural = 0.5;
Q.center_unemployed = 0.9;
Q.center_catholics = 1;
if (Q.center_strength >= Q.left_strength && Q.center_strength >= Q.reformist_strength) {
    Q.center_workers += 0.25;
    Q.center_new_middle += 0.25;
    Q.center_old_middle += 0.1;
    Q.center_rural += 0.1;
    Q.center_unemployed += 0.2;
    Q.center_catholics += 0.25;
}

Q.reformist_workers = 0.75;
Q.reformist_new_middle = 1.5;
if (Q.new_middle_conscious) {
    Q.reformist_new_middle -= 0.25;
}
Q.reformist_old_middle = 3;
Q.reformist_rural = 1.5;
Q.reformist_unemployed = 0.25;
Q.reformist_catholics = 1.25;

Q.labor_workers = 1.5;
Q.labor_new_middle = 1;
if (Q.new_middle_conscious) {
    Q.labor_new_middle -= 0.3;
}
Q.labor_old_middle = 0.1;
Q.labor_rural = 0.7;
Q.labor_unemployed = 0.2;
if (Q.wtb_adopted) {
    Q.labor_unemployed += 0.3;
}
Q.labor_catholics = 1;

Q.neorevisionist_workers = 0;
Q.neorevisionist_new_middle = 0;
Q.neorevisionist_old_middle = 0;
Q.neorevisionist_rural = 0;
Q.neorevisionist_unemployed = 0;
Q.neorevisionist_catholics = 0;
if (Q.neorevisionism) {
    Q.neorevisionist_workers = 0.6;
    Q.neorevisionist_new_middle = 1;
    Q.neorevisionist_old_middle = 2;
    Q.neorevisionist_rural = 2;
    Q.neorevisionist_unemployed = Q.rb_militancy;
    Q.neorevisionist_catholics = 0.75;
}

var total_spd = 0;
var total_factions = 0;

// Calculate SPD performance
var spd_performance = Q.spd_votes - Q.old_spd_performance;
if (Q.old_spd_performance) {
    Q.old_spd_performance = Q.spd_votes;
} else {
    Q.old_spd_performance = 26;
}
if (!spd_performance) {
    spd_performance = Q.spd_votes - Q.old_spd_performance;
}

console.log("SPD performance delta:", spd_performance);

// Sum SPD-normalized votes across all classes
for (var c of Q.classes) {
    total_spd += (Q[c + '_spd_normalized'] * Q[c]);
}
console.log("Total SPD weighted class vote:", total_spd);

// Loop through factions and classes
for (var faction of Q.factions) {
    Q[faction + '_votes'] = 0; // Ensure clean start

    for (var c of Q.classes) {
        var base_vote = ((Q[faction + '_strength'] / 100) * Q[faction + '_' + c]) * ((Q[c + '_spd_normalized'] * Q[c]) / total_spd);
        var dissent = Q[faction + '_dissent'] || 0;
        var dissent_modifier = 1 + (dissent / 60) * (-spd_performance / 10) * 5;

        console.log(`[${faction}] + [${c}]`);
        console.log("  Base vote:", base_vote.toFixed(4));
        console.log("  Dissent:", dissent);
        console.log("  Dissent modifier:", dissent_modifier.toFixed(4));

        if (dissent_modifier < 0) {
            dissent_modifier = 0;
        }

        Q[faction + '_votes'] += base_vote * dissent_modifier;
    }

    console.log(`[${faction}] total votes before normalization:`, Q[faction + '_votes'].toFixed(2));

    total_factions += Q[faction + '_votes'];
}

// Normalize to percentage
for (var faction of Q.factions) {
    Q[faction + '_votes'] = Math.round((Q[faction + '_votes'] / total_factions) * 100);
    console.log(`[${faction}] normalized vote %:`, Q[faction + '_votes']);
}
!}
go-to: post_congress

@post_congress
on-arrival: {!
// set old results
// election threshold constitutional reform
// banning parties
var new_faction_sum = 0;
for (var faction of Q.factions) {
    Q['old_' + faction + '_c'] = Q[faction + '_c'];
    Q[faction + '_c'] = Q[faction + '_votes'];
        // if we use decimals, then we might want to truncate the numbers
    if (Q.use_decimals) {
        Q[faction + '_c_disp'] = Q[faction+'_c'].toFixed(1);
    }  else {
            Q[faction + '_c_disp'] = Q[faction+'_c'];
    }
    Q['change_' + faction + '_c'] = Q[faction + '_c'] - Q['old_' + faction + '_c'];
    var sign = Q['change_' + faction + '_c'] > 0 ? '+'  : '';
    Q['str_change_' + faction] = sign + Q['change_' + faction + '_c'];//.toFixed(1);
}
// calculate new faction sum if electoral reform
if (Q.electoral_threshold && Q.electoral_threshold > 0 || Q.faction_bans) {
    for (var faction of Q.parties) {
        if (Q[faction + '_c'] > 0) {
            if (Q.use_decimals) {
                Q[faction + '_c'] = Math.round(Q[faction + '_c']*1000/new_faction_sum)/10;
            } else {
                Q[faction + '_c'] = Math.round(Q[faction + '_c']*100/new_faction_sum);
            }
        }
        if (Q.use_decimals) {
            Q[faction + '_c_disp'] = Q[faction+'_c'].toFixed(1);
        } else {
            Q[faction + '_c_disp'] = Q[faction+'_c'];
        }
        Q['change_' + faction + '_c'] = Q[faction + '_c'] - Q['old_' + faction + '_c'];
        var sign = Q['change_' + faction + '_c'] > 0 ? '+'  : '';
        Q['str_change_' + faction] = sign + Q['change_' + faction + '_c'];//.toFixed(1);
    }
}

Q.marxist_unity = Q.left_c+Q.center_c;
Q.toleration_unity = Q.center_c+Q.reformist_c+Q.neorevisionist_c;
Q.lassalean_unity = Q.reformist_c+Q.neorevisionist_c;
Q.antitoleration_unity = Q.left_c+Q.labor_c;
Q.pragmatic_unity = Q.center_c+Q.reformist_c;
!}
on-display: {!
if (!Q.neorevisionism) {
    data = [
        {   "id": "left",
            "legend": "Left",
            "name": "Left",
            "seats": Math.round(Q.left_c*0.5),
        },
        {
            "id": "center",
            "legend": "Center",
            "name": "Center",
            "seats": Math.round(Q.center_c*0.5),
        },
        {
            "id": "labor",
            "legend": "Labor",
            "name": "Labor",
            "seats": Math.round(Q.labor_c*0.5),
        },
        {
            "id": "reformist",
            "legend": "Reformists",
            "name": "Reformists",
            "seats": Math.round(Q.reformist_c*0.5),
        },
];
}
else {
    data = [
        {   "id": "left",
            "legend": "Left",
            "name": "Left",
            "seats": Math.round(Q.left_c*0.5),
        },
        {
            "id": "center",
            "legend": "Center",
            "name": "Center",
            "seats": Math.round(Q.center_c*0.5),
        },
        {
            "id": "labor",
            "legend": "Labor",
            "name": "Labor",
            "seats": Math.round(Q.labor_c*0.5),
        },
        {
            "id": "reformist",
            "legend": "Reformists",
            "name": "Reformists",
            "seats": Math.round(Q.reformist_c*0.5),
        },
        {
            "id": "neorevisionist",
            "legend": "Neorevisionists",
            "name": "Neorevisionists",
            "seats": Math.round(Q.neorevisionist_c*0.5),
        },
];
}
if (window && d3) {
    var width = 500; 
    var height = 500;
    var screenWidth = document.getElementById('content').offsetWidth;
    if (screenWidth < width - 50) {
        width = screenWidth - 50; 
        height = width;
        document.getElementById("reichstag").style.height = screenWidth/2 + "px";
    } 

    var parliament = d3.parliament();
    parliament.width(width).height(height).innerRadiusCoef(0.4);
    parliament.enter.fromCenter(true).smallToBig(true);
    parliament.exit.toCenter(false).bigToSmall(true);
    d3.select("#reichstag").datum(data).call(parliament);
}
!}
go-to: coalition_menu

= Election results

{!<svg id="reichstag" style="width: 500px; height: 250px;"> </svg>!}

{!<table>!} 
{!<tr><td>Party</td><td>Vote share</td><td>% Change</td></tr>!}

{!<tr><td><div class="box" style='background-color:#9c0000'> </div> !} Left: {!</td><td>!} [+ left_c +]% {!</td><td>!} [+ str_change_left +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#e30000'> </div> !} Center: {!</td><td>!} [+ center_c +]% {!</td><td>!} [+ str_change_center +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#ff681d'> </div> !} Labor: {!</td><td>!} [+ labor_c +]% {!</td><td>!} [+ str_change_labor +] {!</td></tr>!}

{!<tr><td><div class="box" style='background-color:#ff6ba9'> </div> !} Reformists: {!</td><td>!} [+ reformist_c +]% {!</td><td>!} [+ str_change_reformist +] {!</td></tr>!}

[? if neorevisionism == 1 : {!<tr><td><div class="box" style='background-color:#ff14a5'> </div> !}Neorevisionists: {!</td><td>!} [+ neorevisionist_c +]% {!</td><td>!} [+ str_change_neorevisionist +] {!</td></tr>!} ?]

@coalition_menu

- @marxist_unity: Marxist Unity
- @left_majority: The Left
- @center_majority: The Center
- @toleration_unity: The Pro-Toleration Wing
- @pragmatic_unity: The Pragmatist Wing
- @reformist_majority: The Reformists
- @neorevisionist_majority: The Neorevisionists
- @labor_majority: Labor
- @antitoleration_unity: The Anti-Toleration Wing
- @lassalean_unity: Lassalean Unity

@marxist_unity
view-if: marxist_unity >= 50
subtitle: Left + Center ([+ marxist_unity +]%)
on-arrival: reformist_strength -= 5; neorevisionist_strength -= 5; labor_strength -= 5; left_dissent -= 5; center_dissent -= 5

The party retains a Marxist platform.

@left_majority  
view-if: left_c >= 50  
subtitle: Left ([+ left_c +]%)  
on-arrival: left_strength += 10; reformist_dissent += 10; neorevisionist_dissent += 10; labor_dissent += 5; center_dissent += 5

The party is increasingly driven by the radical left.

@center_majority  
view-if: center_c >= 50  
subtitle: Center ([+ center_c +]%)  
on-arrival: center_strength += 10; left_dissent += 5; reformist_dissent += 5; neorevisionist_dissent += 5; labor_dissent += 5

The party remains in the hands of the Centrist Marxists.

@reformist_majority  
view-if: reformist_c >= 50  
subtitle: Reformists ([+ reformist_c +]%)  
on-arrival: reformist_strength += 10; left_dissent += 10; center_dissent += 5; labor_dissent += 5

The party emphasizes legal reform and parliamentary pragmatism over confrontation.

@neorevisionist_majority  
view-if: neorevisionist_c >= 50  
subtitle: Neorevisionists ([+ neorevisionist_c +]%)  
on-arrival: neorevisionist_strength += 10; left_dissent += 15; center_dissent += 10; labor_dissent += 5

The party has fallen under the control of the neorevisionists.

@labor_majority  
view-if: labor_c >= 50  
subtitle: Labor ([+ labor_c +]%)  
on-arrival: labor_strength += 10; center_dissent += 10; left_dissent += 5; reformist_dissent += 5

The party has fallen under the control of the trade unions.

@toleration_unity  
view-if: toleration_unity >= 50 and spd_toleration and neorevisionism
subtitle: Center + Reformists + Neorevisionists ([+ toleration_unity +]%)  
on-arrival: labor_strength -= 5; left_strength -= 5; left_dissent += 5; z_relation += 5

The party has taken a pro-toleration course.

@pragmatic_unity
view-if: pragmatic_unity >= 50 and (not spd_toleration or not neorevisionism)
subtitle: Center + Reformists ([+ pragmatic_unity +]%)
on-arrival: center_strength += 5; reformist_strength += 5

The party pragmatists have won out in this congress.

@antitoleration_unity  
view-if: antitoleration_unity >= 50 and spd_toleration
subtitle: Left + Labor ([+ antitoleration_unity +]%)  
on-arrival: center_strength -= 5; reformist_strength -= 5; neorevisionist_strength -= 5; reformist_dissent += 5; neorevisionist_dissent += 5

The party has taken an anti-toleration course.

@lassalean_unity  
view-if: lassalean_unity >= 50  
subtitle: Reformists + Neorevisionists ([+ lassalean_unity +]%)  
on-arrival: reformist_strength += 5; neorevisionist_strength += 5; left_dissent += 10; center_dissent += 5

The party has taken a less than Marxist course.